


개요
 이 프로그램은 학생들의 정보를 관리하며, 이진 트리 자료구조를 사용하여 학생 정보를 저장하고 정렬합니다. 프로그램은 기능별로 잘 구분되어 있으며, 시간 복잡도는 이론적으로 O(log n)이지만, 최악의 경우 O(n)이 될 수 있습니다. 이 프로그램은 사용자로부터 학생 정보를 입력 받아 파일로 저장하고, 파일에서 학생 정보를 읽어와 이진 탐색 트리에 저장합니다. 사용자는 학생 정보를 이름, 평균, 학번 순으로 정렬하여 출력할 수 있으며, 학생 정보를 추가하거나 삭제할 수 있습니다. 프로그램은 사용자가 종료할 때까지 실행됩니다.

이진 트리 구조의 구현
- Student 구조체: 학생의 이름, 평균, 학번, 과목, 점수를 저장
- TreeNode 구조체: 이진 트리의 노드로, 학생의 데이터와 왼쪽 및 오른쪽 자식 노드 포인터를 가짐. 정렬별로 각각의 root를 가짐.

이진 트리를 사용하여 학생 정보 정렬
- insert_node: 이진 탐색 트리에 노드를 삽입하는 함수로, 비교 함수를 인자로 받아 학생 정보를 정렬
- delete_node: 이진 탐색 트리에서 노드를 삭제하는 함수
- print_inorder: 이진 탐색 트리를 중위 순회하며 학생 정보를 출력하는 함수

시간 복잡도
사용자 한명의 데이터는 32바이트입니다. 100GB에는 3,125,000,000개의 정보를 저장할 수 있습니다. log2의 3,125,000,000는 31.5 이므로, 30 ~ 35번의 연산으로 수백 GB의 데이터에 접근할 수 있습니다.

사용자 인터페이스
프로그램 인터페이스는 메인 메뉴, 정렬 메뉴, txt 파일에 사용자 추가 및 삭제 기능을 포함합니다. 사용자는 이 인터페이스를 통해 사용자 정보를 쉽게 관리하며, 이러한 구성은 프로그램의 기능을 이해하고 사용하기 쉽게 만들어줍니다. 

개발 및 데이터 환경 
 
- GCC 컴파일 환경에서 구현되었습니다. 
- ‘student.txt’ 파일을 직접 만들었습니다. 이름, 평균, 학번, 과목, 점수별로 띄어쓰기로 구분하여 100개의 데이터를 이용하여 테스트 하였습니다. 
